import Ol from "./basicsComponents/Ol";
import Ul from "./basicsComponents/Ul";
import Checkbox from "./basicsComponents/Checkbox";
import TextItem from "./basicsComponents/TextItem";
import ItemManager from "./ItemManager";
import useFirestore from "../hooks/useFirestore";
import useQueryConditions from "../hooks/useQueryConditions";
import useList from "../hooks/useList";
import CollapsibleBlock from "./CollapsibleBlock";
import TaskProgress from "./TaskProgress";
function NoteList({ blockId }) {
    const { conditions } = useQueryConditions("blockId", blockId);
    const { data: notes } = useFirestore("notes", conditions);
    const { groupItemsByAdjacency } = useList();

    // –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –æ–±–∏—Ä–∞—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É –ì–†–£–ü–ò
    const GroupRenderer = ({ group, index }) => {
        const type = group[0].type; // –¢–∏–ø –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É –≥—Ä—É–ø—ñ
        const key = `group-${index}-${type}`;

        // üí° –õ–æ–≥—ñ–∫–∞: –Ø–∫—â–æ —Ç–∏–ø 'ol', –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Ol –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü—ñ—ó –≤—Å—ñ—î—ó –≥—Ä—É–ø–∏.
        if (type === "ol") {
            // Ol –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∏–π–º–∞—Ç–∏ –º–∞—Å–∏–≤ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É <li>
            return <Ol key={key} items={group} />;
        }
        if (type === "ul") {
            return <Ul key={key} items={group} />;
        }

        // üí° –î–ª—è —ñ–Ω—à–∏—Ö —Ç–∏–ø—ñ–≤ (checkbox, text), —Ä–µ–Ω–¥–µ—Ä–∏–º–æ —ó—Ö –æ–∫—Ä–µ–º–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –Ω–µ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å —Å–ø—ñ–ª—å–Ω–æ—ó –æ–±–≥–æ—Ä—Ç–∫–∏ (–æ–∫—Ä—ñ–º –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ <div>)
        return (
            <>
                {group.map((item) => {
                    if (type === "checkbox") {
                        return <Checkbox key={item.itemId} item={item} />;
                    }
                    if (type === "text") {
                        return <TextItem key={item.itemId} item={item} />;
                    }
                    return null;
                })}
            </>
        );
    };

    return (
        <section>
            {notes?.map((note) => (
                <CollapsibleBlock
                    key={note?.id}
                    title={note?.title}
                    progress={<TaskProgress note={note} />}
                >
                    <ItemManager note={note} />

                    {/* ‚úÖ –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø –ù–û–í–û–á –õ–û–ì–Ü–ö–ò –ì–†–£–ü–£–í–ê–ù–ù–Ø */}
                    {groupItemsByAdjacency(note?.list).map((group, index) => (
                        <GroupRenderer
                            key={index}
                            group={group}
                            index={index}
                        />
                    ))}
                </CollapsibleBlock>
            ))}
        </section>
    );
}

export default NoteList;
