import { useState, useEffect } from "react";

import useFirestore from "../hooks/useFirestore";

function TaskProgress({ note }) {
    // üí° value –º–∞—î –±—É—Ç–∏ –≤—ñ–¥—Å–æ—Ç–∫–æ–º (0 –¥–æ 100)

    const [value, setValue] = useState(0);

    const { updateData: updateNote } = useFirestore("notes");

    const isTask = note?.isTask || false;

    const [isProgress, setIsProgress] = useState(false);

    useEffect(() => {
        const listItems = note?.list || [];

        // 1. –§—ñ–ª—å—Ç—Ä—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —Ç–∏–ø—É 'checkbox', –æ—Å–∫—ñ–ª—å–∫–∏ –ª–∏—à–µ –≤–æ–Ω–∏ –º–∞—é—Ç—å —Å—Ç–∞—Ç—É—Å 'complete'.

        // –Ø–∫—â–æ –≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ 'complete' –¥–ª—è –≤—Å—ñ—Ö —Ç–∏–ø—ñ–≤, —Ü–µ–π —Ñ—ñ–ª—å—Ç—Ä –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏.

        const checkableItems = listItems.filter(
            (item) => item.type === "checkbox",
        );

        const totalTasks = checkableItems.length;
        if (totalTasks === 0) {
            setIsProgress(false);
            setValue(0);
            return;
        }
        if (totalTasks !== 0 && isTask) {
            setIsProgress(true);
        }

        // 2. –†–∞—Ö—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å

        const completedTasks = checkableItems.filter(
            (item) => item.complete === true,
        ).length;

        // 3. –û–±—á–∏—Å–ª—é—î–º–æ –≤—ñ–¥—Å–æ—Ç–æ–∫

        const newProgressValue = Math.round(
            (completedTasks / totalTasks) * 100,
        );

        // 4. –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω

        setValue(newProgressValue);
    }, [note?.list, isTask]); // üí° –ó–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –ª–∏—à–µ –≤—ñ–¥ note?.list

    const handleTask = (note) => {
        const listItems = note?.list || [];

        // 1. –§—ñ–ª—å—Ç—Ä—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ —Ç–∏–ø—É 'checkbox', –æ—Å–∫—ñ–ª—å–∫–∏ –ª–∏—à–µ –≤–æ–Ω–∏ –º–∞—é—Ç—å —Å—Ç–∞—Ç—É—Å 'complete'.

        // –Ø–∫—â–æ –≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ 'complete' –¥–ª—è –≤—Å—ñ—Ö —Ç–∏–ø—ñ–≤, —Ü–µ–π —Ñ—ñ–ª—å—Ç—Ä –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏.

        const checkableItems = listItems.filter(
            (item) => item.type === "checkbox",
        );

        const totalTasks = checkableItems.length;

        if (isTask === false && totalTasks !== 0) {
            updateNote(note?.id, {
                isTask: true,
            });
        }
    };

    // –î–æ–¥–∞—Ç–∫–æ–≤–æ: –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –ø–æ—Ä—É—á —ñ–∑ –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä–æ–º

    return (
        <div>
            <button onClick={() => handleTask(note)}>–ó—Ä–æ–±–∏—Ç–∏ Task</button>

            <hr />

            {isProgress && (
                <div>
                    <progress value={value||0} min="0" max="100"></progress>

                    <span>{value||0}%</span>
                </div>
            )}

            <hr />
        </div>
    );
}

export default TaskProgress;
